<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: realtime-bidding.proto

/**
 * SKAdNetwork API starting from version 2.2 supports multiple ad
 * presentation options specified by the `fidelity-type` parameter of the
 * SKAdNetwork signature. The following are the fidelity types supported by
 * Apple. For more info visit:
 * https://developer.apple.com/documentation/storekit/skadnetwork/signing_and_providing_ads
 *
 * Protobuf type <code>SKAdNetworkFidelityType</code>
 */
class SKAdNetworkFidelityType
{
    /**
     * Attribution for app installs within 24 hours of viewing an ad for at least
     * 3 seconds. Supported for SKAdnetwork version 2.2 and up. For more info see:
     * https://developer.apple.com/documentation/storekit/skadnetwork/generating_the_signature_to_validate_view-through_ads
     *
     * Generated from protobuf enum <code>VIEW_THROUGH_ADS = 0;</code>
     */
    const VIEW_THROUGH_ADS = 0;
    /**
     * Attribution for app installs initiated from the StoreKit-rendered App Store
     * product page driven by ad clicks. Supported for all SKAdNetwork versions.
     * For more info see:
     * https://developer.apple.com/documentation/storekit/skadnetwork/generating_the_signature_to_validate_storekit-rendered_ads
     *
     * Generated from protobuf enum <code>STOREKIT_RENDERED_ADS = 1;</code>
     */
    const STOREKIT_RENDERED_ADS = 1;

    private static $valueToName = [
        self::VIEW_THROUGH_ADS => 'VIEW_THROUGH_ADS',
        self::STOREKIT_RENDERED_ADS => 'STOREKIT_RENDERED_ADS',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

