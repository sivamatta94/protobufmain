<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: realtime-bidding.proto

namespace BidRequest;

use UnexpectedValueException;

/**
 * [default = UNKNOWN_PUBLISHER_TYPE];
 *
 * Protobuf type <code>BidRequest.VisibilityState</code>
 */
class VisibilityState
{
    /**
     * Generated from protobuf enum <code>VISIBILITY_STATE_UNKNOWN = 0;</code>
     */
    const VISIBILITY_STATE_UNKNOWN = 0;
    /**
     * The page is at least partially visible. For example, in the foreground
     * tab of a non-minimized window.
     *
     * Generated from protobuf enum <code>VISIBILITY_STATE_VISIBLE = 1;</code>
     */
    const VISIBILITY_STATE_VISIBLE = 1;
    /**
     * The page is not visible to users. For example, when the page is in a
     * background browser tab, or in a minimized window.
     *
     * Generated from protobuf enum <code>VISIBILITY_STATE_HIDDEN = 2;</code>
     */
    const VISIBILITY_STATE_HIDDEN = 2;

    private static $valueToName = [
        self::VISIBILITY_STATE_UNKNOWN => 'VISIBILITY_STATE_UNKNOWN',
        self::VISIBILITY_STATE_VISIBLE => 'VISIBILITY_STATE_VISIBLE',
        self::VISIBILITY_STATE_HIDDEN => 'VISIBILITY_STATE_HIDDEN',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(VisibilityState::class, \BidRequest_VisibilityState::class);

