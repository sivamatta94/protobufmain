<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: realtime-bidding.proto

namespace BidRequest\Video;

use UnexpectedValueException;

/**
 * Types of feed for audio content. See
 * https://github.com/InteractiveAdvertisingBureau/AdCOM/blob/master/AdCOM%20v1.0%20FINAL.md#list--feed-types-
 * for details.
 *
 * Protobuf type <code>BidRequest.Video.FeedType</code>
 */
class FeedType
{
    /**
     * Generated from protobuf enum <code>FEED_TYPE_UNKNOWN = 0;</code>
     */
    const FEED_TYPE_UNKNOWN = 0;
    /**
     * Music streaming service.
     *
     * Generated from protobuf enum <code>MUSIC_SERVICE = 1;</code>
     */
    const MUSIC_SERVICE = 1;
    /**
     * Live content broadcast over the air but also available through online
     * streaming.
     *
     * Generated from protobuf enum <code>FM_AM_BROADCAST = 2;</code>
     */
    const FM_AM_BROADCAST = 2;
    /**
     * Original, pre-recorded content distributed as episodes in a series.
     *
     * Generated from protobuf enum <code>PODCAST = 3;</code>
     */
    const PODCAST = 3;

    private static $valueToName = [
        self::FEED_TYPE_UNKNOWN => 'FEED_TYPE_UNKNOWN',
        self::MUSIC_SERVICE => 'MUSIC_SERVICE',
        self::FM_AM_BROADCAST => 'FM_AM_BROADCAST',
        self::PODCAST => 'PODCAST',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(FeedType::class, \BidRequest_Video_FeedType::class);

