<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: realtime-bidding.proto

namespace BidRequest\Video\CompanionSlot;

use UnexpectedValueException;

/**
 * These are the formats of the creatives allowed in this companion ad
 * slot.
 *
 * Protobuf type <code>BidRequest.Video.CompanionSlot.CreativeFormat</code>
 */
class CreativeFormat
{
    /**
     * Generated from protobuf enum <code>IMAGE_CREATIVE = 0;</code>
     */
    const IMAGE_CREATIVE = 0;
    /**
     * Generated from protobuf enum <code>FLASH_CREATIVE = 1;</code>
     */
    const FLASH_CREATIVE = 1;
    /**
     * Generated from protobuf enum <code>HTML_CREATIVE = 2;</code>
     */
    const HTML_CREATIVE = 2;
    /**
     * Generated from protobuf enum <code>UNKNOWN_CREATIVE_FORMAT = -1;</code>
     */
    const UNKNOWN_CREATIVE_FORMAT = -1;

    private static $valueToName = [
        self::IMAGE_CREATIVE => 'IMAGE_CREATIVE',
        self::FLASH_CREATIVE => 'FLASH_CREATIVE',
        self::HTML_CREATIVE => 'HTML_CREATIVE',
        self::UNKNOWN_CREATIVE_FORMAT => 'UNKNOWN_CREATIVE_FORMAT',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(CreativeFormat::class, \BidRequest_Video_CompanionSlot_CreativeFormat::class);

