<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: realtime-bidding.proto

namespace BidRequest\Video;

use UnexpectedValueException;

/**
 * The event that causes playback to end. This will only be filled
 * for non-instream video formats.
 *
 * Protobuf type <code>BidRequest.Video.PlaybackCessationMode</code>
 */
class PlaybackCessationMode
{
    /**
     * Generated from protobuf enum <code>PLAYBACK_CESSATION_MODE_UNKNOWN = 0;</code>
     */
    const PLAYBACK_CESSATION_MODE_UNKNOWN = 0;
    /**
     * On video completion or when terminated by user
     *
     * Generated from protobuf enum <code>COMPLETION_OR_USER = 1;</code>
     */
    const COMPLETION_OR_USER = 1;
    /**
     * On leaving viewport or when terminated by user
     *
     * Generated from protobuf enum <code>LEAVING_OR_USER = 2;</code>
     */
    const LEAVING_OR_USER = 2;
    /**
     * On leaving viewport continues as a floating/slider unit until
     * video completion or when terminated by user
     *
     * Generated from protobuf enum <code>LEAVING_CONTINUES_OR_USER = 3;</code>
     */
    const LEAVING_CONTINUES_OR_USER = 3;

    private static $valueToName = [
        self::PLAYBACK_CESSATION_MODE_UNKNOWN => 'PLAYBACK_CESSATION_MODE_UNKNOWN',
        self::COMPLETION_OR_USER => 'COMPLETION_OR_USER',
        self::LEAVING_OR_USER => 'LEAVING_OR_USER',
        self::LEAVING_CONTINUES_OR_USER => 'LEAVING_CONTINUES_OR_USER',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(PlaybackCessationMode::class, \BidRequest_Video_PlaybackCessationMode::class);

