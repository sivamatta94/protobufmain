<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: realtime-bidding.proto

namespace BidRequest\Video;

use UnexpectedValueException;

/**
 * The video file formats that are allowed for this request. The response
 * should support at least one of them.
 *
 * Protobuf type <code>BidRequest.Video.VideoFormat</code>
 */
class VideoFormat
{
    /**
     * Flash video files are accepted (FLV).
     *
     * Generated from protobuf enum <code>VIDEO_FLV = 0;</code>
     */
    const VIDEO_FLV = 0;
    /**
     * Generated from protobuf enum <code>VIDEO_MP4 = 1;</code>
     */
    const VIDEO_MP4 = 1;
    /**
     * Valid VAST ads with at least one media file hosted on youtube.com.
     *
     * Generated from protobuf enum <code>YT_HOSTED = 2;</code>
     */
    const YT_HOSTED = 2;
    /**
     * Flash VPAID (SWF).
     *
     * Generated from protobuf enum <code>VPAID_FLASH = 3;</code>
     */
    const VPAID_FLASH = 3;
    /**
     * JavaScript VPAID.
     *
     * Generated from protobuf enum <code>VPAID_JS = 4;</code>
     */
    const VPAID_JS = 4;
    /**
     * Generated from protobuf enum <code>AUDIO_MP3 = 5;</code>
     */
    const AUDIO_MP3 = 5;
    /**
     * Generated from protobuf enum <code>AUDIO_OGG = 6;</code>
     */
    const AUDIO_OGG = 6;
    /**
     * Requires both MP3 & OGG as Google does not know
     * which codecs are installed on the player.
     *
     * Generated from protobuf enum <code>AUDIO_MP3_OGG = 7;</code>
     */
    const AUDIO_MP3_OGG = 7;
    /**
     * Generated from protobuf enum <code>VIDEO_WEBM = 8;</code>
     */
    const VIDEO_WEBM = 8;
    /**
     * Generated from protobuf enum <code>VIDEO_MOV = 9;</code>
     */
    const VIDEO_MOV = 9;
    /**
     * Generated from protobuf enum <code>VIDEO_3GPP = 10;</code>
     */
    const VIDEO_3GPP = 10;
    /**
     * Generated from protobuf enum <code>VIDEO_HLS = 11;</code>
     */
    const VIDEO_HLS = 11;
    /**
     * Generated from protobuf enum <code>VIDEO_DASH = 12;</code>
     */
    const VIDEO_DASH = 12;
    /**
     * Audio version of MP4.
     *
     * Generated from protobuf enum <code>AUDIO_MP4A = 13;</code>
     */
    const AUDIO_MP4A = 13;
    /**
     * Generated from protobuf enum <code>UNKNOWN_VIDEO_FORMAT = -1;</code>
     */
    const UNKNOWN_VIDEO_FORMAT = -1;

    private static $valueToName = [
        self::VIDEO_FLV => 'VIDEO_FLV',
        self::VIDEO_MP4 => 'VIDEO_MP4',
        self::YT_HOSTED => 'YT_HOSTED',
        self::VPAID_FLASH => 'VPAID_FLASH',
        self::VPAID_JS => 'VPAID_JS',
        self::AUDIO_MP3 => 'AUDIO_MP3',
        self::AUDIO_OGG => 'AUDIO_OGG',
        self::AUDIO_MP3_OGG => 'AUDIO_MP3_OGG',
        self::VIDEO_WEBM => 'VIDEO_WEBM',
        self::VIDEO_MOV => 'VIDEO_MOV',
        self::VIDEO_3GPP => 'VIDEO_3GPP',
        self::VIDEO_HLS => 'VIDEO_HLS',
        self::VIDEO_DASH => 'VIDEO_DASH',
        self::AUDIO_MP4A => 'AUDIO_MP4A',
        self::UNKNOWN_VIDEO_FORMAT => 'UNKNOWN_VIDEO_FORMAT',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(VideoFormat::class, \BidRequest_Video_VideoFormat::class);

