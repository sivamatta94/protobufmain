<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: realtime-bidding.proto

namespace BidRequest\AdSlot;

use UnexpectedValueException;

/**
 * Possible ad types that are allowed in the bid response. allowed_ad_types
 * always contains one or more values. Interstitial slots may also support
 * banner ads. An ad slot with ALLOWED_AD_TYPE_NATIVE may or may not support
 * native video, regardless of whether ALLOWED_AD_TYPE_VIDEO is set.
 * Likewise, an ad slot without ALLOWED_AD_TYPE_NATIVE does not support
 * native video, regardless of whether ALLOWED_AD_TYPE_VIDEO is set.
 *
 * Protobuf type <code>BidRequest.AdSlot.AllowedAdType</code>
 */
class AllowedAdType
{
    /**
     * Generated from protobuf enum <code>ALLOWED_AD_TYPE_BANNER = 0;</code>
     */
    const ALLOWED_AD_TYPE_BANNER = 0;
    /**
     * Generated from protobuf enum <code>ALLOWED_AD_TYPE_NATIVE = 1;</code>
     */
    const ALLOWED_AD_TYPE_NATIVE = 1;
    /**
     * Generated from protobuf enum <code>ALLOWED_AD_TYPE_VIDEO = 2;</code>
     */
    const ALLOWED_AD_TYPE_VIDEO = 2;
    /**
     * Generated from protobuf enum <code>ALLOWED_AD_TYPE_AUDIO = 3;</code>
     */
    const ALLOWED_AD_TYPE_AUDIO = 3;
    /**
     * Generated from protobuf enum <code>UNKNOWN_ALLOWED_AD_TYPE = -1;</code>
     */
    const UNKNOWN_ALLOWED_AD_TYPE = -1;

    private static $valueToName = [
        self::ALLOWED_AD_TYPE_BANNER => 'ALLOWED_AD_TYPE_BANNER',
        self::ALLOWED_AD_TYPE_NATIVE => 'ALLOWED_AD_TYPE_NATIVE',
        self::ALLOWED_AD_TYPE_VIDEO => 'ALLOWED_AD_TYPE_VIDEO',
        self::ALLOWED_AD_TYPE_AUDIO => 'ALLOWED_AD_TYPE_AUDIO',
        self::UNKNOWN_ALLOWED_AD_TYPE => 'UNKNOWN_ALLOWED_AD_TYPE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(AllowedAdType::class, \BidRequest_AdSlot_AllowedAdType::class);

