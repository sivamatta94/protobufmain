<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: realtime-bidding.proto

namespace BidRequest\AdSlot;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>BidRequest.AdSlot.FlexibleAdSlotSettings</code>
 */
class FlexibleAdSlotSettings extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional int32 max_width = 1;</code>
     */
    protected $max_width = null;
    /**
     * Generated from protobuf field <code>optional int32 max_height = 2;</code>
     */
    protected $max_height = null;
    /**
     * Generated from protobuf field <code>optional int32 min_width = 3;</code>
     */
    protected $min_width = null;
    /**
     * Generated from protobuf field <code>optional int32 min_height = 4;</code>
     */
    protected $min_height = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $max_width
     *     @type int $max_height
     *     @type int $min_width
     *     @type int $min_height
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\RealtimeBidding::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional int32 max_width = 1;</code>
     * @return int
     */
    public function getMaxWidth()
    {
        return isset($this->max_width) ? $this->max_width : 0;
    }

    public function hasMaxWidth()
    {
        return isset($this->max_width);
    }

    public function clearMaxWidth()
    {
        unset($this->max_width);
    }

    /**
     * Generated from protobuf field <code>optional int32 max_width = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setMaxWidth($var)
    {
        GPBUtil::checkInt32($var);
        $this->max_width = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int32 max_height = 2;</code>
     * @return int
     */
    public function getMaxHeight()
    {
        return isset($this->max_height) ? $this->max_height : 0;
    }

    public function hasMaxHeight()
    {
        return isset($this->max_height);
    }

    public function clearMaxHeight()
    {
        unset($this->max_height);
    }

    /**
     * Generated from protobuf field <code>optional int32 max_height = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setMaxHeight($var)
    {
        GPBUtil::checkInt32($var);
        $this->max_height = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int32 min_width = 3;</code>
     * @return int
     */
    public function getMinWidth()
    {
        return isset($this->min_width) ? $this->min_width : 0;
    }

    public function hasMinWidth()
    {
        return isset($this->min_width);
    }

    public function clearMinWidth()
    {
        unset($this->min_width);
    }

    /**
     * Generated from protobuf field <code>optional int32 min_width = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setMinWidth($var)
    {
        GPBUtil::checkInt32($var);
        $this->min_width = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int32 min_height = 4;</code>
     * @return int
     */
    public function getMinHeight()
    {
        return isset($this->min_height) ? $this->min_height : 0;
    }

    public function hasMinHeight()
    {
        return isset($this->min_height);
    }

    public function clearMinHeight()
    {
        unset($this->min_height);
    }

    /**
     * Generated from protobuf field <code>optional int32 min_height = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setMinHeight($var)
    {
        GPBUtil::checkInt32($var);
        $this->min_height = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(FlexibleAdSlotSettings::class, \BidRequest_AdSlot_FlexibleAdSlotSettings::class);

