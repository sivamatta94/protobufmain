<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: realtime-bidding.proto

namespace BidRequest\AdSlot;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A native ad consists of pieces that are rendered by the publisher. A
 * publisher may support multiple distinct native ad templates. If the
 * request also allows banners or videos, you can respond with other types
 * of ads by setting html_snippet or video_url instead. If only native
 * templates exist, you must set the native_ad field in any response you
 * send.
 *
 * Generated from protobuf message <code>BidRequest.AdSlot.NativeAdTemplate</code>
 */
class NativeAdTemplate extends \Google\Protobuf\Internal\Message
{
    /**
     * Bitfield describing which fields are required by the publisher. Bid
     * responses with no value for these fields will be rejected. Click and
     * view tracking urls are always implicitly required.
     *
     * Generated from protobuf field <code>optional int64 required_fields = 1;</code>
     */
    protected $required_fields = null;
    /**
     * Bitfield describing which fields are recommended by the publisher. All
     * recommended fields are supported, but not all recommended fields are
     * required.
     *
     * Generated from protobuf field <code>optional int64 recommended_fields = 2;</code>
     */
    protected $recommended_fields = null;
    /**
     * max_safe_length indicates the maximum number of Unicode characters that
     * are guaranteed to be shown without truncation. Longer strings may be
     * truncated and ellipsized by Ad Exchange or the publisher during
     * rendering.
     *
     * Generated from protobuf field <code>optional int32 headline_max_safe_length = 3;</code>
     */
    protected $headline_max_safe_length = null;
    /**
     * Generated from protobuf field <code>optional int32 body_max_safe_length = 4;</code>
     */
    protected $body_max_safe_length = null;
    /**
     * Generated from protobuf field <code>optional int32 call_to_action_max_safe_length = 5;</code>
     */
    protected $call_to_action_max_safe_length = null;
    /**
     * Generated from protobuf field <code>optional int32 advertiser_max_safe_length = 6;</code>
     */
    protected $advertiser_max_safe_length = null;
    /**
     * Generated from protobuf field <code>optional int32 price_max_safe_length = 15;</code>
     */
    protected $price_max_safe_length = null;
    /**
     * The width and height from which to calculate the required aspect ratio.
     * You can provide a larger image in the response. Images that have aspect
     * ratios substantially different than those implied by the height and
     * width may be filtered.
     *
     * Generated from protobuf field <code>optional int32 image_width = 7;</code>
     */
    protected $image_width = null;
    /**
     * Generated from protobuf field <code>optional int32 image_height = 8;</code>
     */
    protected $image_height = null;
    /**
     * Generated from protobuf field <code>optional int32 logo_width = 9;</code>
     */
    protected $logo_width = null;
    /**
     * Generated from protobuf field <code>optional int32 logo_height = 10;</code>
     */
    protected $logo_height = null;
    /**
     * Generated from protobuf field <code>optional int32 app_icon_width = 11;</code>
     */
    protected $app_icon_width = null;
    /**
     * Generated from protobuf field <code>optional int32 app_icon_height = 12;</code>
     */
    protected $app_icon_height = null;
    /**
     * Globally distinct id for the specific style, HTML, and CSS with which
     * the native ad is rendered.
     *
     * Generated from protobuf field <code>optional int32 style_id = 16;</code>
     */
    protected $style_id = null;
    /**
     * [default = PIXEL];
     *
     * Generated from protobuf field <code>optional .BidRequest.AdSlot.NativeAdTemplate.LayoutType style_layout_type = 17;</code>
     */
    protected $style_layout_type = null;
    /**
     * If the style_layout_type is Pixel, width and height of the
     * entire native ad after rendering. If the style_layout_type is
     * Fluid, the style_height and style_width may optionally
     * not be populated.
     *
     * Generated from protobuf field <code>optional int32 style_height = 18;</code>
     */
    protected $style_height = null;
    /**
     * Generated from protobuf field <code>optional int32 style_width = 19;</code>
     */
    protected $style_width = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $required_fields
     *           Bitfield describing which fields are required by the publisher. Bid
     *           responses with no value for these fields will be rejected. Click and
     *           view tracking urls are always implicitly required.
     *     @type int|string $recommended_fields
     *           Bitfield describing which fields are recommended by the publisher. All
     *           recommended fields are supported, but not all recommended fields are
     *           required.
     *     @type int $headline_max_safe_length
     *           max_safe_length indicates the maximum number of Unicode characters that
     *           are guaranteed to be shown without truncation. Longer strings may be
     *           truncated and ellipsized by Ad Exchange or the publisher during
     *           rendering.
     *     @type int $body_max_safe_length
     *     @type int $call_to_action_max_safe_length
     *     @type int $advertiser_max_safe_length
     *     @type int $price_max_safe_length
     *     @type int $image_width
     *           The width and height from which to calculate the required aspect ratio.
     *           You can provide a larger image in the response. Images that have aspect
     *           ratios substantially different than those implied by the height and
     *           width may be filtered.
     *     @type int $image_height
     *     @type int $logo_width
     *     @type int $logo_height
     *     @type int $app_icon_width
     *     @type int $app_icon_height
     *     @type int $style_id
     *           Globally distinct id for the specific style, HTML, and CSS with which
     *           the native ad is rendered.
     *     @type int $style_layout_type
     *           [default = PIXEL];
     *     @type int $style_height
     *           If the style_layout_type is Pixel, width and height of the
     *           entire native ad after rendering. If the style_layout_type is
     *           Fluid, the style_height and style_width may optionally
     *           not be populated.
     *     @type int $style_width
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\RealtimeBidding::initOnce();
        parent::__construct($data);
    }

    /**
     * Bitfield describing which fields are required by the publisher. Bid
     * responses with no value for these fields will be rejected. Click and
     * view tracking urls are always implicitly required.
     *
     * Generated from protobuf field <code>optional int64 required_fields = 1;</code>
     * @return int|string
     */
    public function getRequiredFields()
    {
        return isset($this->required_fields) ? $this->required_fields : 0;
    }

    public function hasRequiredFields()
    {
        return isset($this->required_fields);
    }

    public function clearRequiredFields()
    {
        unset($this->required_fields);
    }

    /**
     * Bitfield describing which fields are required by the publisher. Bid
     * responses with no value for these fields will be rejected. Click and
     * view tracking urls are always implicitly required.
     *
     * Generated from protobuf field <code>optional int64 required_fields = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setRequiredFields($var)
    {
        GPBUtil::checkInt64($var);
        $this->required_fields = $var;

        return $this;
    }

    /**
     * Bitfield describing which fields are recommended by the publisher. All
     * recommended fields are supported, but not all recommended fields are
     * required.
     *
     * Generated from protobuf field <code>optional int64 recommended_fields = 2;</code>
     * @return int|string
     */
    public function getRecommendedFields()
    {
        return isset($this->recommended_fields) ? $this->recommended_fields : 0;
    }

    public function hasRecommendedFields()
    {
        return isset($this->recommended_fields);
    }

    public function clearRecommendedFields()
    {
        unset($this->recommended_fields);
    }

    /**
     * Bitfield describing which fields are recommended by the publisher. All
     * recommended fields are supported, but not all recommended fields are
     * required.
     *
     * Generated from protobuf field <code>optional int64 recommended_fields = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setRecommendedFields($var)
    {
        GPBUtil::checkInt64($var);
        $this->recommended_fields = $var;

        return $this;
    }

    /**
     * max_safe_length indicates the maximum number of Unicode characters that
     * are guaranteed to be shown without truncation. Longer strings may be
     * truncated and ellipsized by Ad Exchange or the publisher during
     * rendering.
     *
     * Generated from protobuf field <code>optional int32 headline_max_safe_length = 3;</code>
     * @return int
     */
    public function getHeadlineMaxSafeLength()
    {
        return isset($this->headline_max_safe_length) ? $this->headline_max_safe_length : 0;
    }

    public function hasHeadlineMaxSafeLength()
    {
        return isset($this->headline_max_safe_length);
    }

    public function clearHeadlineMaxSafeLength()
    {
        unset($this->headline_max_safe_length);
    }

    /**
     * max_safe_length indicates the maximum number of Unicode characters that
     * are guaranteed to be shown without truncation. Longer strings may be
     * truncated and ellipsized by Ad Exchange or the publisher during
     * rendering.
     *
     * Generated from protobuf field <code>optional int32 headline_max_safe_length = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setHeadlineMaxSafeLength($var)
    {
        GPBUtil::checkInt32($var);
        $this->headline_max_safe_length = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int32 body_max_safe_length = 4;</code>
     * @return int
     */
    public function getBodyMaxSafeLength()
    {
        return isset($this->body_max_safe_length) ? $this->body_max_safe_length : 0;
    }

    public function hasBodyMaxSafeLength()
    {
        return isset($this->body_max_safe_length);
    }

    public function clearBodyMaxSafeLength()
    {
        unset($this->body_max_safe_length);
    }

    /**
     * Generated from protobuf field <code>optional int32 body_max_safe_length = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setBodyMaxSafeLength($var)
    {
        GPBUtil::checkInt32($var);
        $this->body_max_safe_length = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int32 call_to_action_max_safe_length = 5;</code>
     * @return int
     */
    public function getCallToActionMaxSafeLength()
    {
        return isset($this->call_to_action_max_safe_length) ? $this->call_to_action_max_safe_length : 0;
    }

    public function hasCallToActionMaxSafeLength()
    {
        return isset($this->call_to_action_max_safe_length);
    }

    public function clearCallToActionMaxSafeLength()
    {
        unset($this->call_to_action_max_safe_length);
    }

    /**
     * Generated from protobuf field <code>optional int32 call_to_action_max_safe_length = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setCallToActionMaxSafeLength($var)
    {
        GPBUtil::checkInt32($var);
        $this->call_to_action_max_safe_length = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int32 advertiser_max_safe_length = 6;</code>
     * @return int
     */
    public function getAdvertiserMaxSafeLength()
    {
        return isset($this->advertiser_max_safe_length) ? $this->advertiser_max_safe_length : 0;
    }

    public function hasAdvertiserMaxSafeLength()
    {
        return isset($this->advertiser_max_safe_length);
    }

    public function clearAdvertiserMaxSafeLength()
    {
        unset($this->advertiser_max_safe_length);
    }

    /**
     * Generated from protobuf field <code>optional int32 advertiser_max_safe_length = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setAdvertiserMaxSafeLength($var)
    {
        GPBUtil::checkInt32($var);
        $this->advertiser_max_safe_length = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int32 price_max_safe_length = 15;</code>
     * @return int
     */
    public function getPriceMaxSafeLength()
    {
        return isset($this->price_max_safe_length) ? $this->price_max_safe_length : 0;
    }

    public function hasPriceMaxSafeLength()
    {
        return isset($this->price_max_safe_length);
    }

    public function clearPriceMaxSafeLength()
    {
        unset($this->price_max_safe_length);
    }

    /**
     * Generated from protobuf field <code>optional int32 price_max_safe_length = 15;</code>
     * @param int $var
     * @return $this
     */
    public function setPriceMaxSafeLength($var)
    {
        GPBUtil::checkInt32($var);
        $this->price_max_safe_length = $var;

        return $this;
    }

    /**
     * The width and height from which to calculate the required aspect ratio.
     * You can provide a larger image in the response. Images that have aspect
     * ratios substantially different than those implied by the height and
     * width may be filtered.
     *
     * Generated from protobuf field <code>optional int32 image_width = 7;</code>
     * @return int
     */
    public function getImageWidth()
    {
        return isset($this->image_width) ? $this->image_width : 0;
    }

    public function hasImageWidth()
    {
        return isset($this->image_width);
    }

    public function clearImageWidth()
    {
        unset($this->image_width);
    }

    /**
     * The width and height from which to calculate the required aspect ratio.
     * You can provide a larger image in the response. Images that have aspect
     * ratios substantially different than those implied by the height and
     * width may be filtered.
     *
     * Generated from protobuf field <code>optional int32 image_width = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setImageWidth($var)
    {
        GPBUtil::checkInt32($var);
        $this->image_width = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int32 image_height = 8;</code>
     * @return int
     */
    public function getImageHeight()
    {
        return isset($this->image_height) ? $this->image_height : 0;
    }

    public function hasImageHeight()
    {
        return isset($this->image_height);
    }

    public function clearImageHeight()
    {
        unset($this->image_height);
    }

    /**
     * Generated from protobuf field <code>optional int32 image_height = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setImageHeight($var)
    {
        GPBUtil::checkInt32($var);
        $this->image_height = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int32 logo_width = 9;</code>
     * @return int
     */
    public function getLogoWidth()
    {
        return isset($this->logo_width) ? $this->logo_width : 0;
    }

    public function hasLogoWidth()
    {
        return isset($this->logo_width);
    }

    public function clearLogoWidth()
    {
        unset($this->logo_width);
    }

    /**
     * Generated from protobuf field <code>optional int32 logo_width = 9;</code>
     * @param int $var
     * @return $this
     */
    public function setLogoWidth($var)
    {
        GPBUtil::checkInt32($var);
        $this->logo_width = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int32 logo_height = 10;</code>
     * @return int
     */
    public function getLogoHeight()
    {
        return isset($this->logo_height) ? $this->logo_height : 0;
    }

    public function hasLogoHeight()
    {
        return isset($this->logo_height);
    }

    public function clearLogoHeight()
    {
        unset($this->logo_height);
    }

    /**
     * Generated from protobuf field <code>optional int32 logo_height = 10;</code>
     * @param int $var
     * @return $this
     */
    public function setLogoHeight($var)
    {
        GPBUtil::checkInt32($var);
        $this->logo_height = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int32 app_icon_width = 11;</code>
     * @return int
     */
    public function getAppIconWidth()
    {
        return isset($this->app_icon_width) ? $this->app_icon_width : 0;
    }

    public function hasAppIconWidth()
    {
        return isset($this->app_icon_width);
    }

    public function clearAppIconWidth()
    {
        unset($this->app_icon_width);
    }

    /**
     * Generated from protobuf field <code>optional int32 app_icon_width = 11;</code>
     * @param int $var
     * @return $this
     */
    public function setAppIconWidth($var)
    {
        GPBUtil::checkInt32($var);
        $this->app_icon_width = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int32 app_icon_height = 12;</code>
     * @return int
     */
    public function getAppIconHeight()
    {
        return isset($this->app_icon_height) ? $this->app_icon_height : 0;
    }

    public function hasAppIconHeight()
    {
        return isset($this->app_icon_height);
    }

    public function clearAppIconHeight()
    {
        unset($this->app_icon_height);
    }

    /**
     * Generated from protobuf field <code>optional int32 app_icon_height = 12;</code>
     * @param int $var
     * @return $this
     */
    public function setAppIconHeight($var)
    {
        GPBUtil::checkInt32($var);
        $this->app_icon_height = $var;

        return $this;
    }

    /**
     * Globally distinct id for the specific style, HTML, and CSS with which
     * the native ad is rendered.
     *
     * Generated from protobuf field <code>optional int32 style_id = 16;</code>
     * @return int
     */
    public function getStyleId()
    {
        return isset($this->style_id) ? $this->style_id : 0;
    }

    public function hasStyleId()
    {
        return isset($this->style_id);
    }

    public function clearStyleId()
    {
        unset($this->style_id);
    }

    /**
     * Globally distinct id for the specific style, HTML, and CSS with which
     * the native ad is rendered.
     *
     * Generated from protobuf field <code>optional int32 style_id = 16;</code>
     * @param int $var
     * @return $this
     */
    public function setStyleId($var)
    {
        GPBUtil::checkInt32($var);
        $this->style_id = $var;

        return $this;
    }

    /**
     * [default = PIXEL];
     *
     * Generated from protobuf field <code>optional .BidRequest.AdSlot.NativeAdTemplate.LayoutType style_layout_type = 17;</code>
     * @return int
     */
    public function getStyleLayoutType()
    {
        return isset($this->style_layout_type) ? $this->style_layout_type : 0;
    }

    public function hasStyleLayoutType()
    {
        return isset($this->style_layout_type);
    }

    public function clearStyleLayoutType()
    {
        unset($this->style_layout_type);
    }

    /**
     * [default = PIXEL];
     *
     * Generated from protobuf field <code>optional .BidRequest.AdSlot.NativeAdTemplate.LayoutType style_layout_type = 17;</code>
     * @param int $var
     * @return $this
     */
    public function setStyleLayoutType($var)
    {
        GPBUtil::checkEnum($var, \BidRequest\AdSlot\NativeAdTemplate\LayoutType::class);
        $this->style_layout_type = $var;

        return $this;
    }

    /**
     * If the style_layout_type is Pixel, width and height of the
     * entire native ad after rendering. If the style_layout_type is
     * Fluid, the style_height and style_width may optionally
     * not be populated.
     *
     * Generated from protobuf field <code>optional int32 style_height = 18;</code>
     * @return int
     */
    public function getStyleHeight()
    {
        return isset($this->style_height) ? $this->style_height : 0;
    }

    public function hasStyleHeight()
    {
        return isset($this->style_height);
    }

    public function clearStyleHeight()
    {
        unset($this->style_height);
    }

    /**
     * If the style_layout_type is Pixel, width and height of the
     * entire native ad after rendering. If the style_layout_type is
     * Fluid, the style_height and style_width may optionally
     * not be populated.
     *
     * Generated from protobuf field <code>optional int32 style_height = 18;</code>
     * @param int $var
     * @return $this
     */
    public function setStyleHeight($var)
    {
        GPBUtil::checkInt32($var);
        $this->style_height = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int32 style_width = 19;</code>
     * @return int
     */
    public function getStyleWidth()
    {
        return isset($this->style_width) ? $this->style_width : 0;
    }

    public function hasStyleWidth()
    {
        return isset($this->style_width);
    }

    public function clearStyleWidth()
    {
        unset($this->style_width);
    }

    /**
     * Generated from protobuf field <code>optional int32 style_width = 19;</code>
     * @param int $var
     * @return $this
     */
    public function setStyleWidth($var)
    {
        GPBUtil::checkInt32($var);
        $this->style_width = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(NativeAdTemplate::class, \BidRequest_AdSlot_NativeAdTemplate::class);

