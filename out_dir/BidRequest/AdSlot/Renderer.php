<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: realtime-bidding.proto

namespace BidRequest\AdSlot;

use UnexpectedValueException;

/**
 * Defines who controls the environment that made the ad request and will
 * render the ad. On platforms where code written by Google will handle
 * the ad this field is set to GOOGLE. When this field is PUBLISHER the
 * publisher has placed their own code on the device to handle playback of
 * the ad. There is no technical difference in how these request are
 * handled. You may use this field to differentiate between different
 * environments for non-technical reasons. This field is only set for
 * requests that allow VAST video ads.
 *
 * Protobuf type <code>BidRequest.AdSlot.Renderer</code>
 */
class Renderer
{
    /**
     * Generated from protobuf enum <code>UNKNOWN_RENDERER = 0;</code>
     */
    const UNKNOWN_RENDERER = 0;
    /**
     * Generated from protobuf enum <code>GOOGLE = 1;</code>
     */
    const GOOGLE = 1;
    /**
     * Generated from protobuf enum <code>PUBLISHER = 2;</code>
     */
    const PUBLISHER = 2;

    private static $valueToName = [
        self::UNKNOWN_RENDERER => 'UNKNOWN_RENDERER',
        self::GOOGLE => 'GOOGLE',
        self::PUBLISHER => 'PUBLISHER',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Renderer::class, \BidRequest_AdSlot_Renderer::class);

