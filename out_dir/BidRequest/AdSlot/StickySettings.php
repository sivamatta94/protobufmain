<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: realtime-bidding.proto

namespace BidRequest\AdSlot;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Stickiness settings declared by the publisher.
 *
 * Generated from protobuf message <code>BidRequest.AdSlot.StickySettings</code>
 */
class StickySettings extends \Google\Protobuf\Internal\Message
{
    /**
     * Whether the ad slot is a sidebar that sticks on screen when user
     * scrolls.
     *
     * Generated from protobuf field <code>optional .BidRequest.AdSlot.StickySettings.Stickiness vertical_stickiness = 1;</code>
     */
    protected $vertical_stickiness = null;
    /**
     * Whether the ad slot is a horizontal slot that sticks on the top of the
     * screen when user scrolls.
     *
     * Generated from protobuf field <code>optional .BidRequest.AdSlot.StickySettings.Stickiness top_horizontal_stickiness = 2;</code>
     */
    protected $top_horizontal_stickiness = null;
    /**
     * Whether the ad slot is a horizontal slot that sticks on the bottom of
     * the screen when user scrolls.
     *
     * Generated from protobuf field <code>optional .BidRequest.AdSlot.StickySettings.Stickiness bottom_horizontal_stickiness = 3;</code>
     */
    protected $bottom_horizontal_stickiness = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $vertical_stickiness
     *           Whether the ad slot is a sidebar that sticks on screen when user
     *           scrolls.
     *     @type int $top_horizontal_stickiness
     *           Whether the ad slot is a horizontal slot that sticks on the top of the
     *           screen when user scrolls.
     *     @type int $bottom_horizontal_stickiness
     *           Whether the ad slot is a horizontal slot that sticks on the bottom of
     *           the screen when user scrolls.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\RealtimeBidding::initOnce();
        parent::__construct($data);
    }

    /**
     * Whether the ad slot is a sidebar that sticks on screen when user
     * scrolls.
     *
     * Generated from protobuf field <code>optional .BidRequest.AdSlot.StickySettings.Stickiness vertical_stickiness = 1;</code>
     * @return int
     */
    public function getVerticalStickiness()
    {
        return isset($this->vertical_stickiness) ? $this->vertical_stickiness : 0;
    }

    public function hasVerticalStickiness()
    {
        return isset($this->vertical_stickiness);
    }

    public function clearVerticalStickiness()
    {
        unset($this->vertical_stickiness);
    }

    /**
     * Whether the ad slot is a sidebar that sticks on screen when user
     * scrolls.
     *
     * Generated from protobuf field <code>optional .BidRequest.AdSlot.StickySettings.Stickiness vertical_stickiness = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setVerticalStickiness($var)
    {
        GPBUtil::checkEnum($var, \BidRequest\AdSlot\StickySettings\Stickiness::class);
        $this->vertical_stickiness = $var;

        return $this;
    }

    /**
     * Whether the ad slot is a horizontal slot that sticks on the top of the
     * screen when user scrolls.
     *
     * Generated from protobuf field <code>optional .BidRequest.AdSlot.StickySettings.Stickiness top_horizontal_stickiness = 2;</code>
     * @return int
     */
    public function getTopHorizontalStickiness()
    {
        return isset($this->top_horizontal_stickiness) ? $this->top_horizontal_stickiness : 0;
    }

    public function hasTopHorizontalStickiness()
    {
        return isset($this->top_horizontal_stickiness);
    }

    public function clearTopHorizontalStickiness()
    {
        unset($this->top_horizontal_stickiness);
    }

    /**
     * Whether the ad slot is a horizontal slot that sticks on the top of the
     * screen when user scrolls.
     *
     * Generated from protobuf field <code>optional .BidRequest.AdSlot.StickySettings.Stickiness top_horizontal_stickiness = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setTopHorizontalStickiness($var)
    {
        GPBUtil::checkEnum($var, \BidRequest\AdSlot\StickySettings\Stickiness::class);
        $this->top_horizontal_stickiness = $var;

        return $this;
    }

    /**
     * Whether the ad slot is a horizontal slot that sticks on the bottom of
     * the screen when user scrolls.
     *
     * Generated from protobuf field <code>optional .BidRequest.AdSlot.StickySettings.Stickiness bottom_horizontal_stickiness = 3;</code>
     * @return int
     */
    public function getBottomHorizontalStickiness()
    {
        return isset($this->bottom_horizontal_stickiness) ? $this->bottom_horizontal_stickiness : 0;
    }

    public function hasBottomHorizontalStickiness()
    {
        return isset($this->bottom_horizontal_stickiness);
    }

    public function clearBottomHorizontalStickiness()
    {
        unset($this->bottom_horizontal_stickiness);
    }

    /**
     * Whether the ad slot is a horizontal slot that sticks on the bottom of
     * the screen when user scrolls.
     *
     * Generated from protobuf field <code>optional .BidRequest.AdSlot.StickySettings.Stickiness bottom_horizontal_stickiness = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setBottomHorizontalStickiness($var)
    {
        GPBUtil::checkEnum($var, \BidRequest\AdSlot\StickySettings\Stickiness::class);
        $this->bottom_horizontal_stickiness = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(StickySettings::class, \BidRequest_AdSlot_StickySettings::class);

