<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: realtime-bidding.proto

namespace BidRequest\AdSlot\StickySettings;

use UnexpectedValueException;

/**
 * Specifies the allowable sticky settings values.
 *
 * Protobuf type <code>BidRequest.AdSlot.StickySettings.Stickiness</code>
 */
class Stickiness
{
    /**
     * Generated from protobuf enum <code>UNKNOWN_STICKINESS = 0;</code>
     */
    const UNKNOWN_STICKINESS = 0;
    /**
     * Generated from protobuf enum <code>IS_STICKY = 1;</code>
     */
    const IS_STICKY = 1;

    private static $valueToName = [
        self::UNKNOWN_STICKINESS => 'UNKNOWN_STICKINESS',
        self::IS_STICKY => 'IS_STICKY',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Stickiness::class, \BidRequest_AdSlot_StickySettings_Stickiness::class);

