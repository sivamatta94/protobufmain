<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: realtime-bidding.proto

namespace BidRequest\AdSlot\BillableEventRateBidAdjustment;

use UnexpectedValueException;

/**
 * The types of creative the bid adjustments can apply to.
 *
 * Protobuf type <code>BidRequest.AdSlot.BillableEventRateBidAdjustment.CreativeType</code>
 */
class CreativeType
{
    /**
     * Generated from protobuf enum <code>CREATIVE_TYPE_UNKNOWN = 0;</code>
     */
    const CREATIVE_TYPE_UNKNOWN = 0;
    /**
     * Banner ads
     *
     * Generated from protobuf enum <code>HTML_SNIPPET = 1;</code>
     */
    const HTML_SNIPPET = 1;
    /**
     * VAST video or audio ads
     *
     * Generated from protobuf enum <code>VIDEO_VAST = 2;</code>
     */
    const VIDEO_VAST = 2;
    /**
     * Native ads
     *
     * Generated from protobuf enum <code>NATIVE = 3;</code>
     */
    const NATIVE = 3;
    /**
     * SDK rendered ad
     *
     * Generated from protobuf enum <code>SDK_RENDERED = 4;</code>
     */
    const SDK_RENDERED = 4;

    private static $valueToName = [
        self::CREATIVE_TYPE_UNKNOWN => 'CREATIVE_TYPE_UNKNOWN',
        self::HTML_SNIPPET => 'HTML_SNIPPET',
        self::VIDEO_VAST => 'VIDEO_VAST',
        self::NATIVE => 'NATIVE',
        self::SDK_RENDERED => 'SDK_RENDERED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(CreativeType::class, \BidRequest_AdSlot_BillableEventRateBidAdjustment_CreativeType::class);

