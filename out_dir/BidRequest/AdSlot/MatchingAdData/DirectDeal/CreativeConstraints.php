<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: realtime-bidding.proto

namespace BidRequest\AdSlot\MatchingAdData\DirectDeal;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Constraints for creatives that can apply when bidding on a deal.
 *
 * Generated from protobuf message <code>BidRequest.AdSlot.MatchingAdData.DirectDeal.CreativeConstraints</code>
 */
class CreativeConstraints extends \Google\Protobuf\Internal\Message
{
    /**
     * The allowed ad types of the deal. If empty, there are no
     * deal-specific allowed ad type restrictions for the deal. In that
     * case, bidders should refer to the BidRequest-level creative types
     * in adslot.allowed_ad_types.
     *
     * Generated from protobuf field <code>repeated .BidRequest.AdSlot.AllowedAdType allowed_ad_types = 1 [packed = true];</code>
     */
    private $allowed_ad_types;
    /**
     * Whether skippable creatives are allowed. For
     * PROGRAMMATIC_GUARANTEED or PREFERRED_DEAL deals that specifically
     * allow video or audio ad types, it is always set. For the
     * skippability setting of other deal types or open auction bidding,
     * refer to the corresponding BidRequest-level field
     * video.video_ad_skippable.
     *
     * Generated from protobuf field <code>optional .BidRequest.Video.SkippableBidRequestType video_ad_skippable = 2;</code>
     */
    protected $video_ad_skippable = null;
    /**
     * The maximum allowed duration in milliseconds for the ad. For
     * PROGRAMMATIC_GUARANTEED or PREFERRED_DEAL deals that specifically
     * allow video or audio ad types, it is always set. For the allowed
     * max duration of other deal types or open auction bidding, refer to
     * the corresponding BidRequest-level field video.max_ad_duration.
     *
     * Generated from protobuf field <code>optional int32 max_ad_duration_ms = 3;</code>
     */
    protected $max_ad_duration_ms = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<int>|\Google\Protobuf\Internal\RepeatedField $allowed_ad_types
     *           The allowed ad types of the deal. If empty, there are no
     *           deal-specific allowed ad type restrictions for the deal. In that
     *           case, bidders should refer to the BidRequest-level creative types
     *           in adslot.allowed_ad_types.
     *     @type int $video_ad_skippable
     *           Whether skippable creatives are allowed. For
     *           PROGRAMMATIC_GUARANTEED or PREFERRED_DEAL deals that specifically
     *           allow video or audio ad types, it is always set. For the
     *           skippability setting of other deal types or open auction bidding,
     *           refer to the corresponding BidRequest-level field
     *           video.video_ad_skippable.
     *     @type int $max_ad_duration_ms
     *           The maximum allowed duration in milliseconds for the ad. For
     *           PROGRAMMATIC_GUARANTEED or PREFERRED_DEAL deals that specifically
     *           allow video or audio ad types, it is always set. For the allowed
     *           max duration of other deal types or open auction bidding, refer to
     *           the corresponding BidRequest-level field video.max_ad_duration.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\RealtimeBidding::initOnce();
        parent::__construct($data);
    }

    /**
     * The allowed ad types of the deal. If empty, there are no
     * deal-specific allowed ad type restrictions for the deal. In that
     * case, bidders should refer to the BidRequest-level creative types
     * in adslot.allowed_ad_types.
     *
     * Generated from protobuf field <code>repeated .BidRequest.AdSlot.AllowedAdType allowed_ad_types = 1 [packed = true];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAllowedAdTypes()
    {
        return $this->allowed_ad_types;
    }

    /**
     * The allowed ad types of the deal. If empty, there are no
     * deal-specific allowed ad type restrictions for the deal. In that
     * case, bidders should refer to the BidRequest-level creative types
     * in adslot.allowed_ad_types.
     *
     * Generated from protobuf field <code>repeated .BidRequest.AdSlot.AllowedAdType allowed_ad_types = 1 [packed = true];</code>
     * @param array<int>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAllowedAdTypes($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::ENUM, \BidRequest\AdSlot\AllowedAdType::class);
        $this->allowed_ad_types = $arr;

        return $this;
    }

    /**
     * Whether skippable creatives are allowed. For
     * PROGRAMMATIC_GUARANTEED or PREFERRED_DEAL deals that specifically
     * allow video or audio ad types, it is always set. For the
     * skippability setting of other deal types or open auction bidding,
     * refer to the corresponding BidRequest-level field
     * video.video_ad_skippable.
     *
     * Generated from protobuf field <code>optional .BidRequest.Video.SkippableBidRequestType video_ad_skippable = 2;</code>
     * @return int
     */
    public function getVideoAdSkippable()
    {
        return isset($this->video_ad_skippable) ? $this->video_ad_skippable : 0;
    }

    public function hasVideoAdSkippable()
    {
        return isset($this->video_ad_skippable);
    }

    public function clearVideoAdSkippable()
    {
        unset($this->video_ad_skippable);
    }

    /**
     * Whether skippable creatives are allowed. For
     * PROGRAMMATIC_GUARANTEED or PREFERRED_DEAL deals that specifically
     * allow video or audio ad types, it is always set. For the
     * skippability setting of other deal types or open auction bidding,
     * refer to the corresponding BidRequest-level field
     * video.video_ad_skippable.
     *
     * Generated from protobuf field <code>optional .BidRequest.Video.SkippableBidRequestType video_ad_skippable = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setVideoAdSkippable($var)
    {
        GPBUtil::checkEnum($var, \BidRequest\Video\SkippableBidRequestType::class);
        $this->video_ad_skippable = $var;

        return $this;
    }

    /**
     * The maximum allowed duration in milliseconds for the ad. For
     * PROGRAMMATIC_GUARANTEED or PREFERRED_DEAL deals that specifically
     * allow video or audio ad types, it is always set. For the allowed
     * max duration of other deal types or open auction bidding, refer to
     * the corresponding BidRequest-level field video.max_ad_duration.
     *
     * Generated from protobuf field <code>optional int32 max_ad_duration_ms = 3;</code>
     * @return int
     */
    public function getMaxAdDurationMs()
    {
        return isset($this->max_ad_duration_ms) ? $this->max_ad_duration_ms : 0;
    }

    public function hasMaxAdDurationMs()
    {
        return isset($this->max_ad_duration_ms);
    }

    public function clearMaxAdDurationMs()
    {
        unset($this->max_ad_duration_ms);
    }

    /**
     * The maximum allowed duration in milliseconds for the ad. For
     * PROGRAMMATIC_GUARANTEED or PREFERRED_DEAL deals that specifically
     * allow video or audio ad types, it is always set. For the allowed
     * max duration of other deal types or open auction bidding, refer to
     * the corresponding BidRequest-level field video.max_ad_duration.
     *
     * Generated from protobuf field <code>optional int32 max_ad_duration_ms = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setMaxAdDurationMs($var)
    {
        GPBUtil::checkInt32($var);
        $this->max_ad_duration_ms = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(CreativeConstraints::class, \BidRequest_AdSlot_MatchingAdData_DirectDeal_CreativeConstraints::class);

