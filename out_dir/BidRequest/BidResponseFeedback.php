<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: realtime-bidding.proto

namespace BidRequest;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Feedback on bids submitted in previous responses. This is only set if
 * real-time feedback is enabled for your bidder. Contact your account
 * manager if you want to enable real-time feedback.
 *
 * Generated from protobuf message <code>BidRequest.BidResponseFeedback</code>
 */
class BidResponseFeedback extends \Google\Protobuf\Internal\Message
{
    /**
     * The unique id from BidRequest.id
     *
     * Generated from protobuf field <code>optional bytes request_id = 1;</code>
     */
    protected $request_id = null;
    /**
     * The index of the BidResponse_Ad if there was more than one. The index
     * starts at zero for the first creative.
     *
     * Generated from protobuf field <code>optional int32 creative_index = 2;</code>
     */
    protected $creative_index = null;
    /**
     * The status code for the ad. See creative-status-codes.txt in the
     * technical documentation for a list of ids.
     *
     * Generated from protobuf field <code>optional int32 creative_status_code = 3;</code>
     */
    protected $creative_status_code = null;
    /**
     * If the bid won the auction, this is the price paid in your account
     * currency. If the bid participated in the auction but was out-bid, this
     * is the CPM that should have been exceeded in order to win. This is not
     * set if the bid was filtered prior to the auction, if the publisher or
     * winning bidder has opted out of price feedback or if your account has
     * opted out of sharing winning prices with other bidders. For first-price
     * auctions, minimum_bid_to_win is populated instead of this field.
     *
     * Generated from protobuf field <code>optional int64 cpm_micros = 4;</code>
     */
    protected $cpm_micros = null;
    /**
     * The minimum bid value necessary to have won the auction, in micros of
     * your account currency. If your bid won the auction, this is the second
     * highest bid that was not filtered (including the floor price). If your
     * bid did not win the auction, this is the winning candidate's bid. This
     * field will only be populated if your bid participated in a first-price
     * auction, and will not be populated if your bid was filtered prior to the
     * auction.
     *
     * Generated from protobuf field <code>optional int64 minimum_bid_to_win = 7;</code>
     */
    protected $minimum_bid_to_win = null;
    /**
     * The minimum bid value necessary to have won the server-side component of
     * the overall auction given that there was also an interest group bidding
     * component to the overall auction which ran using the Protected Audience
     * API. The value is expressed in CPM micros of the buyer account currency.
     * The minimum bid to win for the overall auction, including bids from the
     * server-side and the on-device interest group components, is populated in
     * the minimum_bid_to_win field of the same BidResponseFeedback object.
     *
     * Generated from protobuf field <code>optional int64 server_side_component_minimum_bid_to_win = 16;</code>
     */
    protected $server_side_component_minimum_bid_to_win = null;
    /**
     * Billable event rate multiplier that was applied to this bid during
     * ranking. The adjustment reflects the likelihood that your bid would
     * generate a billable event (namely, the ad renders successfully) if it won
     * the auction, relative to the probability that other bids generate a
     * billable event if they won the auction. This adjustment can be larger or
     * smaller than 1. This affects the final ranking in the auction only; in
     * particular, this multiplier does not affect the payment or whether the
     * bid clears any floor price.
     *
     * Generated from protobuf field <code>optional float billable_event_rate_bid_adjustment = 15;</code>
     */
    protected $billable_event_rate_bid_adjustment = null;
    /**
     * When a publisher uses an RTB auction and waterfall-based SDK mediation on
     * the same query, the winner of the real-time auction must also compete in
     * a mediation waterfall (which is ordered by price) to win the impression.
     * If the bid participated in the auction and there was no waterfall, the
     * value of this field is 0. If the bid participated in the auction and
     * there was a waterfall, the value of this field is a price representing a
     * sample bid from the eligible mediation networks that were higher than the
     * auction winner, weighted by expected fill rate. This field can be used
     * in conjunction with minimum_bid_to_win to train bidding models. The CPM
     * is in micros of your account currency.
     *
     * Generated from protobuf field <code>optional int64 sampled_mediation_cpm_ahead_of_auction_winner = 10;</code>
     */
    protected $sampled_mediation_cpm_ahead_of_auction_winner = null;
    /**
     * Event notification token that was included in the bid response.
     *
     * Generated from protobuf field <code>optional bytes event_notification_token = 5;</code>
     */
    protected $event_notification_token = null;
    /**
     * Buyer creative ID that was included in the bid response.
     *
     * Generated from protobuf field <code>optional string buyer_creative_id = 6;</code>
     */
    protected $buyer_creative_id = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $request_id
     *           The unique id from BidRequest.id
     *     @type int $creative_index
     *           The index of the BidResponse_Ad if there was more than one. The index
     *           starts at zero for the first creative.
     *     @type int $creative_status_code
     *           The status code for the ad. See creative-status-codes.txt in the
     *           technical documentation for a list of ids.
     *     @type int|string $cpm_micros
     *           If the bid won the auction, this is the price paid in your account
     *           currency. If the bid participated in the auction but was out-bid, this
     *           is the CPM that should have been exceeded in order to win. This is not
     *           set if the bid was filtered prior to the auction, if the publisher or
     *           winning bidder has opted out of price feedback or if your account has
     *           opted out of sharing winning prices with other bidders. For first-price
     *           auctions, minimum_bid_to_win is populated instead of this field.
     *     @type int|string $minimum_bid_to_win
     *           The minimum bid value necessary to have won the auction, in micros of
     *           your account currency. If your bid won the auction, this is the second
     *           highest bid that was not filtered (including the floor price). If your
     *           bid did not win the auction, this is the winning candidate's bid. This
     *           field will only be populated if your bid participated in a first-price
     *           auction, and will not be populated if your bid was filtered prior to the
     *           auction.
     *     @type int|string $server_side_component_minimum_bid_to_win
     *           The minimum bid value necessary to have won the server-side component of
     *           the overall auction given that there was also an interest group bidding
     *           component to the overall auction which ran using the Protected Audience
     *           API. The value is expressed in CPM micros of the buyer account currency.
     *           The minimum bid to win for the overall auction, including bids from the
     *           server-side and the on-device interest group components, is populated in
     *           the minimum_bid_to_win field of the same BidResponseFeedback object.
     *     @type float $billable_event_rate_bid_adjustment
     *           Billable event rate multiplier that was applied to this bid during
     *           ranking. The adjustment reflects the likelihood that your bid would
     *           generate a billable event (namely, the ad renders successfully) if it won
     *           the auction, relative to the probability that other bids generate a
     *           billable event if they won the auction. This adjustment can be larger or
     *           smaller than 1. This affects the final ranking in the auction only; in
     *           particular, this multiplier does not affect the payment or whether the
     *           bid clears any floor price.
     *     @type int|string $sampled_mediation_cpm_ahead_of_auction_winner
     *           When a publisher uses an RTB auction and waterfall-based SDK mediation on
     *           the same query, the winner of the real-time auction must also compete in
     *           a mediation waterfall (which is ordered by price) to win the impression.
     *           If the bid participated in the auction and there was no waterfall, the
     *           value of this field is 0. If the bid participated in the auction and
     *           there was a waterfall, the value of this field is a price representing a
     *           sample bid from the eligible mediation networks that were higher than the
     *           auction winner, weighted by expected fill rate. This field can be used
     *           in conjunction with minimum_bid_to_win to train bidding models. The CPM
     *           is in micros of your account currency.
     *     @type string $event_notification_token
     *           Event notification token that was included in the bid response.
     *     @type string $buyer_creative_id
     *           Buyer creative ID that was included in the bid response.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\RealtimeBidding::initOnce();
        parent::__construct($data);
    }

    /**
     * The unique id from BidRequest.id
     *
     * Generated from protobuf field <code>optional bytes request_id = 1;</code>
     * @return string
     */
    public function getRequestId()
    {
        return isset($this->request_id) ? $this->request_id : '';
    }

    public function hasRequestId()
    {
        return isset($this->request_id);
    }

    public function clearRequestId()
    {
        unset($this->request_id);
    }

    /**
     * The unique id from BidRequest.id
     *
     * Generated from protobuf field <code>optional bytes request_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setRequestId($var)
    {
        GPBUtil::checkString($var, False);
        $this->request_id = $var;

        return $this;
    }

    /**
     * The index of the BidResponse_Ad if there was more than one. The index
     * starts at zero for the first creative.
     *
     * Generated from protobuf field <code>optional int32 creative_index = 2;</code>
     * @return int
     */
    public function getCreativeIndex()
    {
        return isset($this->creative_index) ? $this->creative_index : 0;
    }

    public function hasCreativeIndex()
    {
        return isset($this->creative_index);
    }

    public function clearCreativeIndex()
    {
        unset($this->creative_index);
    }

    /**
     * The index of the BidResponse_Ad if there was more than one. The index
     * starts at zero for the first creative.
     *
     * Generated from protobuf field <code>optional int32 creative_index = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setCreativeIndex($var)
    {
        GPBUtil::checkInt32($var);
        $this->creative_index = $var;

        return $this;
    }

    /**
     * The status code for the ad. See creative-status-codes.txt in the
     * technical documentation for a list of ids.
     *
     * Generated from protobuf field <code>optional int32 creative_status_code = 3;</code>
     * @return int
     */
    public function getCreativeStatusCode()
    {
        return isset($this->creative_status_code) ? $this->creative_status_code : 0;
    }

    public function hasCreativeStatusCode()
    {
        return isset($this->creative_status_code);
    }

    public function clearCreativeStatusCode()
    {
        unset($this->creative_status_code);
    }

    /**
     * The status code for the ad. See creative-status-codes.txt in the
     * technical documentation for a list of ids.
     *
     * Generated from protobuf field <code>optional int32 creative_status_code = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setCreativeStatusCode($var)
    {
        GPBUtil::checkInt32($var);
        $this->creative_status_code = $var;

        return $this;
    }

    /**
     * If the bid won the auction, this is the price paid in your account
     * currency. If the bid participated in the auction but was out-bid, this
     * is the CPM that should have been exceeded in order to win. This is not
     * set if the bid was filtered prior to the auction, if the publisher or
     * winning bidder has opted out of price feedback or if your account has
     * opted out of sharing winning prices with other bidders. For first-price
     * auctions, minimum_bid_to_win is populated instead of this field.
     *
     * Generated from protobuf field <code>optional int64 cpm_micros = 4;</code>
     * @return int|string
     */
    public function getCpmMicros()
    {
        return isset($this->cpm_micros) ? $this->cpm_micros : 0;
    }

    public function hasCpmMicros()
    {
        return isset($this->cpm_micros);
    }

    public function clearCpmMicros()
    {
        unset($this->cpm_micros);
    }

    /**
     * If the bid won the auction, this is the price paid in your account
     * currency. If the bid participated in the auction but was out-bid, this
     * is the CPM that should have been exceeded in order to win. This is not
     * set if the bid was filtered prior to the auction, if the publisher or
     * winning bidder has opted out of price feedback or if your account has
     * opted out of sharing winning prices with other bidders. For first-price
     * auctions, minimum_bid_to_win is populated instead of this field.
     *
     * Generated from protobuf field <code>optional int64 cpm_micros = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setCpmMicros($var)
    {
        GPBUtil::checkInt64($var);
        $this->cpm_micros = $var;

        return $this;
    }

    /**
     * The minimum bid value necessary to have won the auction, in micros of
     * your account currency. If your bid won the auction, this is the second
     * highest bid that was not filtered (including the floor price). If your
     * bid did not win the auction, this is the winning candidate's bid. This
     * field will only be populated if your bid participated in a first-price
     * auction, and will not be populated if your bid was filtered prior to the
     * auction.
     *
     * Generated from protobuf field <code>optional int64 minimum_bid_to_win = 7;</code>
     * @return int|string
     */
    public function getMinimumBidToWin()
    {
        return isset($this->minimum_bid_to_win) ? $this->minimum_bid_to_win : 0;
    }

    public function hasMinimumBidToWin()
    {
        return isset($this->minimum_bid_to_win);
    }

    public function clearMinimumBidToWin()
    {
        unset($this->minimum_bid_to_win);
    }

    /**
     * The minimum bid value necessary to have won the auction, in micros of
     * your account currency. If your bid won the auction, this is the second
     * highest bid that was not filtered (including the floor price). If your
     * bid did not win the auction, this is the winning candidate's bid. This
     * field will only be populated if your bid participated in a first-price
     * auction, and will not be populated if your bid was filtered prior to the
     * auction.
     *
     * Generated from protobuf field <code>optional int64 minimum_bid_to_win = 7;</code>
     * @param int|string $var
     * @return $this
     */
    public function setMinimumBidToWin($var)
    {
        GPBUtil::checkInt64($var);
        $this->minimum_bid_to_win = $var;

        return $this;
    }

    /**
     * The minimum bid value necessary to have won the server-side component of
     * the overall auction given that there was also an interest group bidding
     * component to the overall auction which ran using the Protected Audience
     * API. The value is expressed in CPM micros of the buyer account currency.
     * The minimum bid to win for the overall auction, including bids from the
     * server-side and the on-device interest group components, is populated in
     * the minimum_bid_to_win field of the same BidResponseFeedback object.
     *
     * Generated from protobuf field <code>optional int64 server_side_component_minimum_bid_to_win = 16;</code>
     * @return int|string
     */
    public function getServerSideComponentMinimumBidToWin()
    {
        return isset($this->server_side_component_minimum_bid_to_win) ? $this->server_side_component_minimum_bid_to_win : 0;
    }

    public function hasServerSideComponentMinimumBidToWin()
    {
        return isset($this->server_side_component_minimum_bid_to_win);
    }

    public function clearServerSideComponentMinimumBidToWin()
    {
        unset($this->server_side_component_minimum_bid_to_win);
    }

    /**
     * The minimum bid value necessary to have won the server-side component of
     * the overall auction given that there was also an interest group bidding
     * component to the overall auction which ran using the Protected Audience
     * API. The value is expressed in CPM micros of the buyer account currency.
     * The minimum bid to win for the overall auction, including bids from the
     * server-side and the on-device interest group components, is populated in
     * the minimum_bid_to_win field of the same BidResponseFeedback object.
     *
     * Generated from protobuf field <code>optional int64 server_side_component_minimum_bid_to_win = 16;</code>
     * @param int|string $var
     * @return $this
     */
    public function setServerSideComponentMinimumBidToWin($var)
    {
        GPBUtil::checkInt64($var);
        $this->server_side_component_minimum_bid_to_win = $var;

        return $this;
    }

    /**
     * Billable event rate multiplier that was applied to this bid during
     * ranking. The adjustment reflects the likelihood that your bid would
     * generate a billable event (namely, the ad renders successfully) if it won
     * the auction, relative to the probability that other bids generate a
     * billable event if they won the auction. This adjustment can be larger or
     * smaller than 1. This affects the final ranking in the auction only; in
     * particular, this multiplier does not affect the payment or whether the
     * bid clears any floor price.
     *
     * Generated from protobuf field <code>optional float billable_event_rate_bid_adjustment = 15;</code>
     * @return float
     */
    public function getBillableEventRateBidAdjustment()
    {
        return isset($this->billable_event_rate_bid_adjustment) ? $this->billable_event_rate_bid_adjustment : 0.0;
    }

    public function hasBillableEventRateBidAdjustment()
    {
        return isset($this->billable_event_rate_bid_adjustment);
    }

    public function clearBillableEventRateBidAdjustment()
    {
        unset($this->billable_event_rate_bid_adjustment);
    }

    /**
     * Billable event rate multiplier that was applied to this bid during
     * ranking. The adjustment reflects the likelihood that your bid would
     * generate a billable event (namely, the ad renders successfully) if it won
     * the auction, relative to the probability that other bids generate a
     * billable event if they won the auction. This adjustment can be larger or
     * smaller than 1. This affects the final ranking in the auction only; in
     * particular, this multiplier does not affect the payment or whether the
     * bid clears any floor price.
     *
     * Generated from protobuf field <code>optional float billable_event_rate_bid_adjustment = 15;</code>
     * @param float $var
     * @return $this
     */
    public function setBillableEventRateBidAdjustment($var)
    {
        GPBUtil::checkFloat($var);
        $this->billable_event_rate_bid_adjustment = $var;

        return $this;
    }

    /**
     * When a publisher uses an RTB auction and waterfall-based SDK mediation on
     * the same query, the winner of the real-time auction must also compete in
     * a mediation waterfall (which is ordered by price) to win the impression.
     * If the bid participated in the auction and there was no waterfall, the
     * value of this field is 0. If the bid participated in the auction and
     * there was a waterfall, the value of this field is a price representing a
     * sample bid from the eligible mediation networks that were higher than the
     * auction winner, weighted by expected fill rate. This field can be used
     * in conjunction with minimum_bid_to_win to train bidding models. The CPM
     * is in micros of your account currency.
     *
     * Generated from protobuf field <code>optional int64 sampled_mediation_cpm_ahead_of_auction_winner = 10;</code>
     * @return int|string
     */
    public function getSampledMediationCpmAheadOfAuctionWinner()
    {
        return isset($this->sampled_mediation_cpm_ahead_of_auction_winner) ? $this->sampled_mediation_cpm_ahead_of_auction_winner : 0;
    }

    public function hasSampledMediationCpmAheadOfAuctionWinner()
    {
        return isset($this->sampled_mediation_cpm_ahead_of_auction_winner);
    }

    public function clearSampledMediationCpmAheadOfAuctionWinner()
    {
        unset($this->sampled_mediation_cpm_ahead_of_auction_winner);
    }

    /**
     * When a publisher uses an RTB auction and waterfall-based SDK mediation on
     * the same query, the winner of the real-time auction must also compete in
     * a mediation waterfall (which is ordered by price) to win the impression.
     * If the bid participated in the auction and there was no waterfall, the
     * value of this field is 0. If the bid participated in the auction and
     * there was a waterfall, the value of this field is a price representing a
     * sample bid from the eligible mediation networks that were higher than the
     * auction winner, weighted by expected fill rate. This field can be used
     * in conjunction with minimum_bid_to_win to train bidding models. The CPM
     * is in micros of your account currency.
     *
     * Generated from protobuf field <code>optional int64 sampled_mediation_cpm_ahead_of_auction_winner = 10;</code>
     * @param int|string $var
     * @return $this
     */
    public function setSampledMediationCpmAheadOfAuctionWinner($var)
    {
        GPBUtil::checkInt64($var);
        $this->sampled_mediation_cpm_ahead_of_auction_winner = $var;

        return $this;
    }

    /**
     * Event notification token that was included in the bid response.
     *
     * Generated from protobuf field <code>optional bytes event_notification_token = 5;</code>
     * @return string
     */
    public function getEventNotificationToken()
    {
        return isset($this->event_notification_token) ? $this->event_notification_token : '';
    }

    public function hasEventNotificationToken()
    {
        return isset($this->event_notification_token);
    }

    public function clearEventNotificationToken()
    {
        unset($this->event_notification_token);
    }

    /**
     * Event notification token that was included in the bid response.
     *
     * Generated from protobuf field <code>optional bytes event_notification_token = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setEventNotificationToken($var)
    {
        GPBUtil::checkString($var, False);
        $this->event_notification_token = $var;

        return $this;
    }

    /**
     * Buyer creative ID that was included in the bid response.
     *
     * Generated from protobuf field <code>optional string buyer_creative_id = 6;</code>
     * @return string
     */
    public function getBuyerCreativeId()
    {
        return isset($this->buyer_creative_id) ? $this->buyer_creative_id : '';
    }

    public function hasBuyerCreativeId()
    {
        return isset($this->buyer_creative_id);
    }

    public function clearBuyerCreativeId()
    {
        unset($this->buyer_creative_id);
    }

    /**
     * Buyer creative ID that was included in the bid response.
     *
     * Generated from protobuf field <code>optional string buyer_creative_id = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setBuyerCreativeId($var)
    {
        GPBUtil::checkString($var, True);
        $this->buyer_creative_id = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(BidResponseFeedback::class, \BidRequest_BidResponseFeedback::class);

