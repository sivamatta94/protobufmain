<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: realtime-bidding.proto

namespace BidResponse\Ad\AdSlot;

use UnexpectedValueException;

/**
 * Position within the pod.
 *
 * Protobuf type <code>BidResponse.Ad.AdSlot.PodPosition</code>
 */
class PodPosition
{
    /**
     * Any position in the pod.
     *
     * Generated from protobuf enum <code>POD_POSITION_ANY = 0;</code>
     */
    const POD_POSITION_ANY = 0;
    /**
     * Last position in the pod.
     *
     * Generated from protobuf enum <code>POD_POSITION_LAST = 1;</code>
     */
    const POD_POSITION_LAST = 1;
    /**
     * First position in the pod.
     *
     * Generated from protobuf enum <code>POD_POSITION_FIRST = 2;</code>
     */
    const POD_POSITION_FIRST = 2;
    /**
     * First or last position in the pod.
     *
     * Generated from protobuf enum <code>POD_POSITION_FIRST_OR_LAST = 3;</code>
     */
    const POD_POSITION_FIRST_OR_LAST = 3;

    private static $valueToName = [
        self::POD_POSITION_ANY => 'POD_POSITION_ANY',
        self::POD_POSITION_LAST => 'POD_POSITION_LAST',
        self::POD_POSITION_FIRST => 'POD_POSITION_FIRST',
        self::POD_POSITION_FIRST_OR_LAST => 'POD_POSITION_FIRST_OR_LAST',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(PodPosition::class, \BidResponse_Ad_AdSlot_PodPosition::class);

