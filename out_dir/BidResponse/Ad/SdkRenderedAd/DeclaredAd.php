<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: realtime-bidding.proto

namespace BidResponse\Ad\SdkRenderedAd;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Declared ad assets to support creative scanning, classification, and
 * enforcement of ad policy and publisher blocks for ads rendered with a
 * custom SDK.
 *
 * Generated from protobuf message <code>BidResponse.Ad.SdkRenderedAd.DeclaredAd</code>
 */
class DeclaredAd extends \Google\Protobuf\Internal\Message
{
    /**
     * The final landing pages of the SDK-rendered ad.
     *
     * Generated from protobuf field <code>repeated string click_through_url = 4;</code>
     */
    private $click_through_url;
    protected $content;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $html_snippet
     *           The HTML snippet representative of the SDK-rendered ad.
     *     @type string $video_url
     *           The URL to the VAST asset used in the SDK-rendered ad.
     *     @type string $video_vast_xml
     *           The VAST document used to render custom SDK-rendered ad. This
     *           document should conform to the VAST 2.0 or 3.0 standard.
     *     @type \BidResponse\Ad\NativeAd $native_ad
     *           The content of a native ad. Native ads consist of multiple building
     *           blocks (such as image and text), which are rendered by the buyer
     *           SDK.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $click_through_url
     *           The final landing pages of the SDK-rendered ad.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\RealtimeBidding::initOnce();
        parent::__construct($data);
    }

    /**
     * The HTML snippet representative of the SDK-rendered ad.
     *
     * Generated from protobuf field <code>string html_snippet = 1;</code>
     * @return string
     */
    public function getHtmlSnippet()
    {
        return $this->readOneof(1);
    }

    public function hasHtmlSnippet()
    {
        return $this->hasOneof(1);
    }

    /**
     * The HTML snippet representative of the SDK-rendered ad.
     *
     * Generated from protobuf field <code>string html_snippet = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setHtmlSnippet($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * The URL to the VAST asset used in the SDK-rendered ad.
     *
     * Generated from protobuf field <code>string video_url = 2;</code>
     * @return string
     */
    public function getVideoUrl()
    {
        return $this->readOneof(2);
    }

    public function hasVideoUrl()
    {
        return $this->hasOneof(2);
    }

    /**
     * The URL to the VAST asset used in the SDK-rendered ad.
     *
     * Generated from protobuf field <code>string video_url = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setVideoUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * The VAST document used to render custom SDK-rendered ad. This
     * document should conform to the VAST 2.0 or 3.0 standard.
     *
     * Generated from protobuf field <code>string video_vast_xml = 5;</code>
     * @return string
     */
    public function getVideoVastXml()
    {
        return $this->readOneof(5);
    }

    public function hasVideoVastXml()
    {
        return $this->hasOneof(5);
    }

    /**
     * The VAST document used to render custom SDK-rendered ad. This
     * document should conform to the VAST 2.0 or 3.0 standard.
     *
     * Generated from protobuf field <code>string video_vast_xml = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setVideoVastXml($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * The content of a native ad. Native ads consist of multiple building
     * blocks (such as image and text), which are rendered by the buyer
     * SDK.
     *
     * Generated from protobuf field <code>.BidResponse.Ad.NativeAd native_ad = 6;</code>
     * @return \BidResponse\Ad\NativeAd|null
     */
    public function getNativeAd()
    {
        return $this->readOneof(6);
    }

    public function hasNativeAd()
    {
        return $this->hasOneof(6);
    }

    /**
     * The content of a native ad. Native ads consist of multiple building
     * blocks (such as image and text), which are rendered by the buyer
     * SDK.
     *
     * Generated from protobuf field <code>.BidResponse.Ad.NativeAd native_ad = 6;</code>
     * @param \BidResponse\Ad\NativeAd $var
     * @return $this
     */
    public function setNativeAd($var)
    {
        GPBUtil::checkMessage($var, \BidResponse\Ad\NativeAd::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * The final landing pages of the SDK-rendered ad.
     *
     * Generated from protobuf field <code>repeated string click_through_url = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getClickThroughUrl()
    {
        return $this->click_through_url;
    }

    /**
     * The final landing pages of the SDK-rendered ad.
     *
     * Generated from protobuf field <code>repeated string click_through_url = 4;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setClickThroughUrl($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->click_through_url = $arr;

        return $this;
    }

    /**
     * @return string
     */
    public function getContent()
    {
        return $this->whichOneof("content");
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(DeclaredAd::class, \BidResponse_Ad_SdkRenderedAd_DeclaredAd::class);

